name: Build and Publish Wheels

on:
  workflow_dispatch:
  push:
    branches:
      - release/build_wheel
  pull_request:
jobs:
  build_source:
    runs-on: ubuntu-latest
    name: Build python source distribution
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Get build dependencies
        working-directory: ./dev
        run: python -m pip install -r dev-requirements.txt
      - name: Build source
        run: python setup.py sdist
      - name: Upload sources as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: source_package
          path: ./dist/

  build_wheels_linux:
    name: Build python wheels on Linux
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install java
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Build wheel
        run: bash dev/build-wheels.sh
      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: wheel_ubuntu-20.04
          path: ./dist/

  build_wheels_mac:
    name: Build python wheel for ${{ matrix.python }}-Mac
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      matrix:
        buildplat:
          - [macos-latest, macosx_*]
        python: ["cp38", "cp39", "cp310", "cp311"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install java
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      # Used to push the built wheels
      - uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.15.0
        env:
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.buildplat[1] }}

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.python }}-${{ startsWith(matrix.buildplat[1], 'macosx') && 'macosx' || matrix.buildplat[1] }}
          path: ./wheelhouse/*.whl


  build_wheels_win:
    name: Build python wheel for ${{ matrix.python }}-Windows
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      matrix:
        buildplat:
          - [windows-latest, win_amd64]
        python: ["cp38", "cp39", "cp310", "cp311"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install java
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Check Java version
        run: |
          java -version
          echo "JAVA_HOME=$(which java)" >> $GITHUB_ENV
          echo $JAVA_HOME

      # Used to push the built wheels
      - uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.5
        env:
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.buildplat[1] }}

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.python }}-${{ startsWith(matrix.buildplat[1], 'win') && 'win_amd64' || matrix.buildplat[1] }}
          path: ./wheelhouse/*.whl


#jobs:
#  build-wheels:
#    name: Build wheels on ${{ matrix.os }} for Python ${{ matrix.python-version }}
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [ubuntu-latest, macos-latest, windows-latest]
#        python-version: ["3.8", "3.9", "3.10", "3.11"]
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Set up JDK ${{ inputs.java }}
#        uses: actions/setup-java@v1
#        with:
#          java-version: '8'
#      - name: Check Java version
#        run: |
#          java -version
#          echo "JAVA_HOME=$(which java)" >> $GITHUB_ENV
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install cibuildwheel
#          pip install -r dev/dev-requirements.txt
#      - name: Build wheels
#        run: cibuildwheel --output-dir wheelhouse
#      - name: Publish wheels
#        if: github.event_name == 'push'
#        uses: actions/upload-artifact@v2
#        with:
#          path: ./wheelhouse/*.whl
